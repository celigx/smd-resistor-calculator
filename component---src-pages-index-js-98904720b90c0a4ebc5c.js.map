{"version":3,"file":"component---src-pages-index-js-98904720b90c0a4ebc5c.js","mappings":"mMAAaA,EAAQ,CACnB,CAAEC,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CAAED,KAAM,KAAMC,MAAO,OACrB,CA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","sources":["webpack://smd-calculator/./src/components/EIA96Codes.js","webpack://smd-calculator/./src/pages/index.js","webpack://smd-calculator/./src/assets/Resistor.svg"],"sourcesContent":["export const digit = [\n  { code: \"01\", value: \"100\" },\n  { code: \"02\", value: \"102\" },\n  { code: \"03\", value: \"105\" },\n  { code: \"04\", value: \"107\" },\n  { code: \"05\", value: \"110\" },\n  { code: \"06\", value: \"113\" },\n  { code: \"07\", value: \"115\" },\n  { code: \"08\", value: \"118\" },\n  { code: \"09\", value: \"121\" },\n  { code: \"10\", value: \"124\" },\n  { code: \"11\", value: \"127\" },\n  { code: \"12\", value: \"130\" },\n  { code: \"13\", value: \"133\" },\n  { code: \"14\", value: \"137\" },\n  { code: \"15\", value: \"140\" },\n  { code: \"16\", value: \"143\" },\n  { code: \"17\", value: \"147\" },\n  { code: \"18\", value: \"150\" },\n  { code: \"19\", value: \"154\" },\n  { code: \"20\", value: \"158\" },\n  { code: \"21\", value: \"162\" },\n  { code: \"22\", value: \"165\" },\n  { code: \"23\", value: \"169\" },\n  { code: \"24\", value: \"174\" },\n  { code: \"25\", value: \"178\" },\n  { code: \"26\", value: \"182\" },\n  { code: \"27\", value: \"187\" },\n  { code: \"28\", value: \"191\" },\n  { code: \"29\", value: \"196\" },\n  { code: \"30\", value: \"200\" },\n  { code: \"31\", value: \"205\" },\n  { code: \"32\", value: \"210\" },\n  { code: \"33\", value: \"215\" },\n  { code: \"34\", value: \"221\" },\n  { code: \"35\", value: \"226\" },\n  { code: \"36\", value: \"232\" },\n  { code: \"37\", value: \"237\" },\n  { code: \"38\", value: \"243\" },\n  { code: \"39\", value: \"249\" },\n  { code: \"40\", value: \"255\" },\n  { code: \"41\", value: \"261\" },\n  { code: \"42\", value: \"267\" },\n  { code: \"43\", value: \"274\" },\n  { code: \"44\", value: \"280\" },\n  { code: \"45\", value: \"287\" },\n  { code: \"46\", value: \"294\" },\n  { code: \"47\", value: \"301\" },\n  { code: \"48\", value: \"309\" },\n  { code: \"49\", value: \"316\" },\n  { code: \"50\", value: \"324\" },\n  { code: \"51\", value: \"332\" },\n  { code: \"52\", value: \"340\" },\n  { code: \"53\", value: \"348\" },\n  { code: \"54\", value: \"357\" },\n  { code: \"55\", value: \"365\" },\n  { code: \"56\", value: \"374\" },\n  { code: \"57\", value: \"383\" },\n  { code: \"58\", value: \"392\" },\n  { code: \"59\", value: \"402\" },\n  { code: \"60\", value: \"412\" },\n  { code: \"61\", value: \"422\" },\n  { code: \"62\", value: \"432\" },\n  { code: \"63\", value: \"442\" },\n  { code: \"64\", value: \"453\" },\n  { code: \"65\", value: \"464\" },\n  { code: \"66\", value: \"475\" },\n  { code: \"67\", value: \"487\" },\n  { code: \"68\", value: \"499\" },\n  { code: \"69\", value: \"511\" },\n  { code: \"70\", value: \"523\" },\n  { code: \"71\", value: \"536\" },\n  { code: \"72\", value: \"549\" },\n  { code: \"73\", value: \"562\" },\n  { code: \"74\", value: \"576\" },\n  { code: \"75\", value: \"590\" },\n  { code: \"76\", value: \"604\" },\n  { code: \"77\", value: \"619\" },\n  { code: \"78\", value: \"634\" },\n  { code: \"79\", value: \"649\" },\n  { code: \"80\", value: \"665\" },\n  { code: \"81\", value: \"681\" },\n  { code: \"82\", value: \"698\" },\n  { code: \"83\", value: \"715\" },\n  { code: \"84\", value: \"732\" },\n  { code: \"85\", value: \"750\" },\n  { code: \"86\", value: \"768\" },\n  { code: \"87\", value: \"787\" },\n  { code: \"88\", value: \"806\" },\n  { code: \"89\", value: \"825\" },\n  { code: \"90\", value: \"845\" },\n  { code: \"91\", value: \"866\" },\n  { code: \"92\", value: \"887\" },\n  { code: \"93\", value: \"909\" },\n  { code: \"94\", value: \"931\" },\n  { code: \"95\", value: \"953\" },\n  { code: \"96\", value: \"976\" },\n];\n\nexport const multiply = [\n  { code: \"Z\", value: \"0.001\" },\n  { code: \"Y\", value: \"0.01\" },\n  { code: \"X\", value: \"0.1\" },\n  { code: \"S\", value: \"0.1\" },\n  { code: \"A\", value: \"1\" },\n  { code: \"B\", value: \"10\" },\n  { code: \"H\", value: \"10\" },\n  { code: \"C\", value: \"100\" },\n  { code: \"D\", value: \"1000\" },\n  { code: \"E\", value: \"10000\" },\n  { code: \"F\", value: \"100000\" },\n];","import React, { useState, useEffect } from \"react\"\nimport \"../styles/layout.sass\"\nimport Resistor from \"../assets/Resistor.svg\"\nimport { digit, multiply } from '../components/EIA96Codes';\n\nexport default function Home() {\n  const [value, setValue] = useState('')\n  const [output, setOutput] = useState('')\n\n  useEffect(() => {\n    showOutput()\n  })\n\n  // Show output if value length is equal or bigger than 3, otherwise don't show resistance output\n  const showOutput = () => {\n    value.length >= 3 ? displayOutput() : setOutput('')\n  }\n  \n  // Update input change\n  const valueChange = (e) => {\n    // Only allow digits and character r\n    const value = e.target.value.replace(/[^rzyxsabhcdef?0-9]/gi, \"\")\n\n    setValue(value)\n  }\n\n  // Format number to add k instead of thousand (1000 => 1kΩ) etc.\n  const formatNumber = (num) => {\n    // Billion\n    return Math.abs(num) >= 1.0e+9\n      ? Math.abs(num) / 1.0e+9 + 'GΩ'\n      // Million\n      : Math.abs(num) >= 1.0e+6\n      ? Math.abs(num) / 1.0e+6 + 'MΩ'\n      // Thousand\n      : Math.abs(num) >= 1.0e+3\n      ? Math.abs(num) / 1.0e+3 + 'kΩ'\n      : Math.abs(num) + 'Ω'\n  }\n\n  const changeToDecimal = () => {\n    // Replace letter R with a dot\n    const letter = value.toString().toUpperCase()\n    const replaceLetter = Number(letter.replace('R', '.'))\n\n    // If variable is NaN is true, return 'Error', else return variable\n    isNaN(replaceLetter) ? setOutput('Error') : setOutput(`${replaceLetter}Ω`)\n  }\n\n  const calculateSMD = () => {\n    // Remove last number\n    const mainNumber = parseInt(value.toString().slice(0, -1))\n    // Get last number\n    const lastNumber = parseInt(value.toString().split('').pop())\n    // Calculate SMD\n    const calculate = mainNumber * Math.pow(10, lastNumber)\n\n    setOutput(formatNumber(calculate))\n  }\n\n  const calculateEIA96 = () => {\n    // Get the index of digit object from EIA96Codes.js\n    const indexOfDigit = digit.map(x => x.code).indexOf(value.replace(/\\D/gi, \"\"))\n    // Get the value of index | If there's no value, return 'null', otherwise return value of index\n    const valueOfIndexDigit = indexOfDigit === -1 ? 'null' : digit[indexOfDigit].value\n    // Get the index of const multiply object from EIA96Codes.js\n    const indexOfMultiply = multiply.map(x => x.code).indexOf((value.toUpperCase()).replace(/\\d/gi, \"\"))\n    // Get the value of index | If there's no value, return 'null', otherwise return value of index\n    const valueOfIndexMultiply = indexOfMultiply === -1 ? 'null' : multiply[indexOfMultiply].value\n    // Calculate values of digit and multiply\n    const calculateEIA96 = Number(valueOfIndexDigit * valueOfIndexMultiply)\n\n    // If variable is NaN, return 'Error'\n    isNaN(calculateEIA96) \n      ? setOutput('Error')\n      // If letter is last, return variable \n      : value.match(/[a-z]$/g)\n      ? setOutput(`${formatNumber(calculateEIA96)} (≤1%)`)\n      : setOutput('Error')\n  }\n\n  // Display calculated resistance\n  const displayOutput = () => {\n    value.match(/r/g) \n      // Show function if character r is matched\n      ? changeToDecimal()\n      : value.match(/[zyxsabhcdef]/g)\n      // Show function if characters zyxsabgcdef are matched\n      ? calculateEIA96()\n      : calculateSMD()\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"title-section\">\n        <Resistor />\n        <h1 className=\"title\">SMD Resistor Calculator</h1>\n      </div>\n\n      <div className=\"smd-section\">\n        <h1 className=\"title\">Enter SMD Code:</h1>\n        <div className=\"smd\">\n          <span className=\"square left\" />\n          <input className=\"input\" value={value} onChange={valueChange} maxLength='4' spellCheck='false' />\n          <span className=\"square right\" />\n        </div>\n        <h1 className=\"output\">Resistance: <span className=\"bold\">{output}</span></h1>\n      </div>\n    </div>\n  )\n}\n","var React = require('react');\n\nfunction Resistor (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"className\":\"resistor\",\"d\":\"M3 25.2222H36.3333L47.4444 3L69.6667 47.4444L91.8889 3L114.111 47.4444L136.333 3L158.556 47.4444L169.667 25.2222H203\",\"stroke\":\"black\",\"strokeWidth\":\"6\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"}));\n}\n\nResistor.defaultProps = {\"width\":\"206\",\"height\":\"51\",\"viewBox\":\"0 0 206 51\",\"fill\":\"none\"};\n\nmodule.exports = Resistor;\n\nResistor.default = Resistor;\n"],"names":["digit","code","value","multiply","Home","useState","setValue","output","setOutput","useEffect","showOutput","length","displayOutput","formatNumber","num","Math","abs","mainNumber","lastNumber","calculate","letter","replaceLetter","match","toString","toUpperCase","Number","replace","isNaN","indexOfDigit","map","x","indexOf","valueOfIndexDigit","indexOfMultiply","valueOfIndexMultiply","calculateEIA96","parseInt","slice","split","pop","pow","className","onChange","e","target","maxLength","spellCheck","React","Resistor","props","createElement","defaultProps","module","exports","default"],"sourceRoot":""}